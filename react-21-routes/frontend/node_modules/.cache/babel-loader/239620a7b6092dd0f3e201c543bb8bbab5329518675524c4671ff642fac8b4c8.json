{"ast":null,"code":"var _jsxFileName = \"/Users/Jade/Desktop/react-projects/react-21-routes/frontend/src/EventsPage.jsx\",\n  _s = $RefreshSig$();\n// import { Link } from 'react-router-dom';\n\n// export default function EventsPage() {\n\n//   const EVENTS = [\n//     { id: 'e1', title: 'Event 1' },\n//     { id: 'e2', title: 'Event 2' },\n//     { id: 'e3', title: 'Event 3' },\n//   ];\n\n//   return (\n//     <>\n//       <h2>EVENTS PAGE</h2>\n//       {/* <li><Link to=\"/events/event-1\">event 1</Link></li>\n//       <li><Link to=\"/events/event-2\">event 2</Link></li>\n//       <li><Link to=\"/events/event-3\">event 3</Link></li> */}\n//       <ul>\n//         {EVENTS.map((anEvent) => (\n//           <li key={anEvent.id}>\n//             <Link to={`/events/${anEvent.id}`}>\n//             {anEvent.title}\n//             </Link>\n//           </li>))}\n//       </ul>\n//     </>\n//   )\n// }\n\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"qNzRHA+sE7qujjZhWBEU6UvtUuo=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","isLoading","setIsLoading","useState","fetchedEvents","setFetchedEvents","error","setError","useEffect","fetchEvents","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","EventsList","events","_c","$RefreshReg$"],"sources":["/Users/Jade/Desktop/react-projects/react-21-routes/frontend/src/EventsPage.jsx"],"sourcesContent":["// import { Link } from 'react-router-dom';\n\n// export default function EventsPage() {\n\n//   const EVENTS = [\n//     { id: 'e1', title: 'Event 1' },\n//     { id: 'e2', title: 'Event 2' },\n//     { id: 'e3', title: 'Event 3' },\n//   ];\n\n//   return (\n//     <>\n//       <h2>EVENTS PAGE</h2>\n//       {/* <li><Link to=\"/events/event-1\">event 1</Link></li>\n//       <li><Link to=\"/events/event-2\">event 2</Link></li>\n//       <li><Link to=\"/events/event-3\">event 3</Link></li> */}\n//       <ul>\n//         {EVENTS.map((anEvent) => (\n//           <li key={anEvent.id}>\n//             <Link to={`/events/${anEvent.id}`}>\n//             {anEvent.title}\n//             </Link>\n//           </li>))}\n//       </ul>\n//     </>\n//   )\n// }\n\nimport { useLoaderData } from 'react-router-dom';\nfunction EventsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n\n      setIsLoading(false);\n    }\n\n    fetchEvents();\n  }, []);\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div>\n      {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n    </>\n  );\n}\n\nexport default EventsPage;"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC;EAEpCK,SAAS,CAAC,MAAM;IACd,eAAeC,WAAWA,CAAA,EAAG;MAC3BP,YAAY,CAAC,IAAI,CAAC;MAElBA,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,GACjCT,SAAS,iBAAIL,OAAA;QAAAc,QAAA,EAAG;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9BV,KAAK,iBAAIV,OAAA;QAAAc,QAAA,EAAIJ;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACL,CAACf,SAAS,IAAIG,aAAa,iBAAIR,OAAA,CAACqB,UAAU;MAACC,MAAM,EAAEd;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACrE,CAAC;AAEP;AAAChB,EAAA,CAvBQD,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}